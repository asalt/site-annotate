{"timestamp":"2025-09-24T11:20:49-05:00","event":"repo_scan","details":"Reviewed repository layout and noted recent cache updates under R/cache.R and supporting scripts."}
{"timestamp":"2025-09-24T11:20:49-05:00","event":"test_run","details":"Executed pytest to gauge current state; observed failures in isoform integration test and mapper unit test due to missing PSM helper export and offline UniProt lookup."}
{"timestamp":"2025-09-24T11:20:49-05:00","event":"python_fix","details":"Restored prepare_psm_file/read_psm_file exports via site_annotate.io package init for backwards compatibility."}
{"timestamp":"2025-09-24T11:20:49-05:00","event":"python_fix","details":"Hardened mapper.add_uniprot cache path to tolerate sandboxed environments and normalise legacy cache rows."}
{"timestamp":"2025-09-24T11:20:49-05:00","event":"test_run","details":"Re-ran targeted and full pytest suites; all 37 tests now pass."}
{"timestamp":"2025-09-24T11:20:49-05:00","event":"next_focus","details":"Transitioning attention to R tooling, starting with cache layer and run pipeline integration."}
{"timestamp":"2025-09-24T11:33:21-05:00","event":"r_tests","details":"Executed bash test.sh to exercise existing R unit suites; initial cache tests revealed gaps prompting further work."}
{"timestamp":"2025-09-24T11:33:21-05:00","event":"r_cache_updates","details":"Parameterised cache DB/RDS locations via options hook, added RDS path normalisation, and created targeted testthat coverage for cache hits, RDS thresholding, and DB fallback."}
{"timestamp":"2025-09-24T11:33:21-05:00","event":"r_tests","details":"Re-ran bash test.sh and full pytest suite; all R and Python tests pass with new cache coverage."}
{"timestamp":"2025-09-24T11:55:43-05:00","event":"r_cache_cleanup","details":"Refined cache DB helpers to manage connections via NA-aware close flags and ensured every code path disconnects, eliminating the lingering dbDisconnect warning."}
{"timestamp":"2025-09-24T11:55:43-05:00","event":"tests","details":"Re-ran bash test.sh and pytest; all R and Python suites remain green without connection warnings."}
{"timestamp":"2025-09-24T13:32:28-05:00","event":"python_tests","details":"Added pytest module to ensure key site_annotate packages import cleanly and validate io re-exports."}
{"timestamp":"2025-09-24T13:32:28-05:00","event":"pytest","details":"Expanded suite now runs 49 tests after new coverage."}
{"timestamp":"2025-09-24T13:47:42-05:00","event":"diann_support","details":"Extended prepare_psm_file to map DIANN-style columns (sequence, protein_ids, precursor area) into the canonical PSM schema and normalise protein identifiers."}
{"timestamp":"2025-09-24T13:47:42-05:00","event":"tests","details":"Expanded io tests with DIANN-like fixture; full pytest now covers 50 cases."}
{"timestamp":"2025-09-24T14:06:46-05:00","event":"diann_probabilities","details":"Sanitized DIANN site occupancy strings, mapped UniMod identifiers to canonical modi columns, and verified oxidation/phospho coverage via new tests."}
{"timestamp":"2025-09-24T14:19:59-05:00","event":"uniprot_fallback","details":"Updated mapper.add_uniprot to harvest UniProt IDs from DIANN Protein.Ids when offline, with regression coverage."}
{"timestamp":"2025-09-24T14:37:56-05:00","event":"fasta_mapping","details":"Tightened FASTA protein alignment: normalised ENSP strings, dropped unmatched PSMs, and expanded UniMod/UniProt fallbacks."}
{"timestamp":"2025-09-24T14:46:51-05:00","event":"fasta_uniprot_fallback","details":"load_and_validate_files now retries FASTA alignment via UniProt IDs before dropping rows, logging remaining misses."}
{"timestamp":"2025-09-24T15:05:23-05:00","event":"fasta_mapping","details":"Reuse matched UniProtâ†’FASTA relationships when unique, drop leftover outliers instead of crashing downstream."}
{"timestamp":"2025-09-24T15:05:23-05:00","event":"modisite_guard","details":"create_15mer now yields None for out-of-bounds positions rather than raising."}
{"timestamp":"2025-09-24T15:22:11-05:00","event":"fasta_synonyms","details":"Index FASTA headers by ENSP/ENST/ENSG/geneID/symbol and UniProt (when available) to recover unmatched proteins; expand DIANN rows when multiple matches exist."}
{"timestamp":"2025-09-24T16:00:41-05:00","event":"diann_probabilities","details":"Populated *_best_localization columns from DIANN site probabilities and kept fallback filtering from dropping every row."}
{"timestamp":"2025-09-24T16:06:04-05:00","event":"diann_aliases","details":"Treat DIANN precursor_lib_index as the canonical spectrum id and surface *_best_localization probabilities from site occupancy strings."}
